call plug#begin()

Plug 'saalaa/WoodenView.vim'
Plug 'saalaa/ancient-colors.vim'

" Advanced vim features
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'

Plug 'scrooloose/nerdtree',     { 'on': 'NERDTreeToggle' }

Plug 'mbbill/undotree',         { 'on': 'UndotreeToggle' }

Plug 'junegunn/vim-journal',    { 'for': 'journal' }
Plug 'vitalk/vim-simple-todo',  { 'for': 'journal' }

" Languages support
Plug 'aaronj1335/underscore-templates.vim'
Plug 'arrufat/vala.vim'
Plug 'digitaltoad/vim-jade'
Plug 'gera/vim-ledger'
Plug 'glench/vim-jinja2-syntax'
Plug 'groenewege/vim-less'
Plug 'honza/dockerfile.vim'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'rust-lang/rust.vim'
Plug 'sophacles/vim-bundle-mako'

" Color schemes (vimcolors.com)
Plug 'fneu/breezy'
Plug 'bruth/vim-newsprint-theme'
Plug 'chriskempson/base16-vim'
Plug 'chriskempson/vim-tomorrow-theme'
Plug 'clinstid/eink.vim'
Plug 'fxn/vim-monochrome'
Plug 'junegunn/seoul256.vim'
Plug 'laserswald/chameleon.vim'
Plug 'owickstrom/vim-colors-paramount'
Plug 'pbrisbin/vim-colors-off'
Plug 'rakr/vim-one'
Plug 'rakr/vim-two-firewatch'
Plug 'robertmeta/nofrils'
Plug 'ryanpcmcquen/true-monochrome_vim'
Plug 'tomasr/molokai'
Plug 'vim-scripts/Cleanroom'
Plug 'widatama/vim-phoenix'

call plug#end()

" Load filetype-specific indent and plugin files
filetype plugin indent on

" Enable colors
syntax on

" Set colorscheme
set background=light
colorscheme ancient

let mapleader = "\<Space>"

" set list
" set listchars=tab:¬\ ,trail:¬

set nowrap              " never wrap long lines
set number              " show line numbers
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set wildmenu            " visual autocomplete for command menu
set showcmd             " show command in bottom bar
set showmatch           " highlight matching [{()}]

" Bloody indentation configuration
set expandtab           " tabs are spaces
set tabstop=2           " number of visual spaces per TAB
set softtabstop=2       " number of spaces in tab when editing
set shiftwidth=2        " number of spaces for autoindent
set textwidth=79        " default text width
set autoindent          " enable autoindentation

" On Mac OS X, modelines is set to 0 due to a vulnerability. It makes sense to
" have secure system-wide defaults and less secure, per-user, settings.
set modelines=5
set modeline

" Set default encoding
set encoding=utf8

" Ignore common files
set wildignore+=*.so,*.swp,*.zip,*.png,*.gif,*.pyc,*.psd,*.xcf
set wildignore+=node_modules,vendor,dist,.git


" Key bindings
" ------------

" leave insert mode with kj
imap kj <ESC>

" Move text blocks around
vmap <C-k> xkP`[V`]
vmap <C-j> xp`[V`]

" Center searches inside screen
nmap n nzzzv
nmap N Nzzzv


" Fix broken simple-todo default config
" -------------------------------------

let g:simple_todo_map_insert_mode_keys = 0


" Settings for WoodenView.vim
" ---------------------------

nmap <silent> <leader>l <Plug>WoodenViewSplit
nmap <silent> <leader>j <Plug>WoodenViewSwitchMain


" Settings for fzf.vim
" --------------------

nmap <silent> <C-p> :<C-u>Files<cr>
nmap <silent> <C-o> :<C-u>Buffers<cr>
nmap <silent> <C-i> :<C-u>BLines<cr>


" NerdTree key binding
" --------------------

nmap <F9> :<C-u>NERDTreeToggle<cr>


" Tabs, trailing spaces and long lines
" ------------------------------------

au Syntax * syn match ErrorMsg /\s\+$/
"au Syntax * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)


" Custom file rules
" -----------------

au BufEnter * syntax sync fromstart

au BufRead /tmp/mutt-* setf mail
au BufRead Vagrantfile setf ruby

au BufEnter *.py set sw=4 ts=4 st=4

au BufEnter *.py nmap <silent> <leader>b o__import__('pdb').set_trace()  # XXX Breakpoint.<esc>
au BufEnter *.py nmap <silent> <leader>B O__import__('pdb').set_trace()  # XXX Breakpoint.<esc>
